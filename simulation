N_DOFS=6;

% gom
d = [0.33 0 0 0.32 0 0.08];
a = [0.075 0.3 0.075 0 0 0];
alpha = [1 0 1 -1 1 0]*pi/2;
theta = [0 0 0 0 0 0]*pi/2; % Initial joint angles

type = ['r', 'r', 'r', 'r', 'r', 'r']; % All joints are revolute.
base = [0; 0; 0]; % Base transformation.

ub = [1, 1, 1, 1, 1, 1]*360*pi/180; % Lower bounds for the joint angles.
lb = -ub; % Upper bounds for the joint angles.
offset = [0 0 0 0 0 0]*pi/2;
Elbow = 1;
roll = 30;
pitch = 20;
yaw = 10;
ypr = [yaw, pitch, roll]*0*pi/180;

robot = struct( ...
'base', base, ...
'theta', theta, ...
'd', d, ...
'a', a, ...
'alpha', alpha, ...
'offset', offset, ...
'qc', zeros(N_DOFS, 1), ...
'type', type, ...
'jac', zeros(3, N_DOFS), ...
'T', repmat(zeros(4), 1, 1, N_DOFS), ...
'ub', ub, ...
'lb', lb, ...
'Elbow', Elbow, ...
'ypr', ypr);

temp1 =[0 0 0 0 0 0;...
90 90 60 0 0 0;...
0 90 60 90 60 0;...
270 0 270 90 270 180;...  
270 180 270 90 90 90];

robot = rob_self_update(robot, deg2rad(temp1(2, :)));

robot_1 = robot;
p_start = [1.2, 1, 1];
p_end = [0.05, 0.2, 0.1]*-1.5;
view_vector =  [7.828 8.177];
axis_scale = 0.3;
x_range = [-1 1]*1;
y_range = x_range;
z_range = [-1 ,x_range(2)];

g = nrob_graphic(); %יצירה של מערכת צרים
g = nrob_plot(g, robot, view_vector, axis_scale, x_range, y_range, z_range);
[robot] = plot_straight_line_2(robot, p_end, g);
