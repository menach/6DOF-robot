function compute_workspace(r)
    % Define the range of joint angles
    numPoints = 15;
    q_range = cell(1, numel(r.lb));
    for i = 1:numel(r.lb)
        q_range{i} = linspace(r.lb(i), r.ub(i), numPoints);
    end
    
    % Prepare for plotting
    figure;
    hold on;
    xlabel('x');
    ylabel('y');
    zlabel('z');
    % i=1;
    tic
    % Compute and plot workspace
    for q1 = q_range{1}
        for q2 = q_range{2}
            for q3 = q_range{3}
            %                 tic
            % Preallocate temp for the current batch of points
            temp = zeros(length(q_range{4}) * length(q_range{5}) * length(q_range{6}), 3);
            index = 1;
            
                for q4 = q_range{4}
                    for q5 = q_range{5}                        
                        for q6 = q_range{6}
                        % Compute the position of the end effector
                        r_local = rob_self_update(r, [q1, q2, q3, q4, q5, q6]');
                        p = r_local.T(1:3, 4, end);
                        
                        % Store the point in temp
                        temp(index, :) = p';
                        index = index + 1;
                        end
                    end
                end
            
            % Plot the points in the current batch
            plot3(temp(:, 1), temp(:, 2), temp(:, 3), '.');
            % drawnow;
            % T_t(i)=toc;
            % disp(T_t(i));
            % i=i+1;
            
            end
        end
    end
    % t_end=sum(T_t);
    % disp(t_end);
    toc
    % Update the plot
    grid on;
    drawnow;
    hold off;
end
